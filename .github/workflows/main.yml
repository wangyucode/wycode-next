name: Deploy with Crane

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: build
        run: pnpm run build

      - name: Tar files in out directory
        run: cd out && tar -czf ../wycode.tar.gz * && cd ..

      - name: Extract version from package.json
        id: extract_version
        run: |
          version=$(jq -r '.version' package.json)
          echo "Version: $version"
          echo "::set-output name=version::$version"

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: Release v${{ steps.extract_version.outputs.version }}
          tag_name: v${{ steps.extract_version.outputs.version }}
          files: wycode.tar.gz

      - name: Call Crane to Deploy
        run: |
          curl -H "X-Api-Key: ${{secrets.CRANE_API_KEY}}" "https://wycode.cn/crane/deploy?url=${{ fromJSON(steps.create_release.outputs.assets)[0].browser_download_url }}"

      - name: Deploy to Github pages
        uses: crazy-max/ghaction-github-pages@v4
        with:
          repo: wangyucode/wangyucode.github.io
          target_branch: master
          build_dir: out
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_PUSH_TOKEN }}

      - name: Send Email
        run: |
          curl -m 10 -i -X POST \
            -H "Content-Type:application/json" \
            -d \
            '{"key": "${{ secrets.MAIL_TOKEN }}","subject":"Frontend Build","content":"frontend deployed","to": "wangyu@wycode.cn"}' \
            'https://wycode.cn/api/v1/email'
