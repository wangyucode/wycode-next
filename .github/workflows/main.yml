name: Frontend

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
        with: 
          node-version: '20'
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: install
        run: npm ci

      - name: build
        run: npm run build
      
      - name: export
        run: npm run export
      
      - name: Get the version from package.json
        id: get_version
        run: echo "::set-output name=VERSION::$(jq -r .version package.json)"

      - name: Tar files in out directory
        run: tar -czvf wycode-${{ steps.get_version.outputs.VERSION }}.tar.gz -C out/ .
      
      - name: Release
        id: create_release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: "${{ steps.get_version.outputs.VERSION }}"
          files: wycode-${{ steps.get_version.outputs.VERSION }}.tar.gz

      
      - name: Call Crane to Deploy
        run: echo ${{steps.create_release.outputs.upload_url}}

      # - name: Send posts to algolia
      #   run: npm run algolia ${{ secrets.ALGOLIA_KEY }}

      # - name: Deploy to Github pages
      #   uses: crazy-max/ghaction-github-pages@v2.1.3
      #   with:
      #     repo: wangyucode/wangyucode.github.io
      #     target_branch: master
      #     build_dir: out
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.REPO_PUSH_TOKEN }}

      # - name: Send Email
      #   run: |
      #     curl -m 10 -i -X POST \
      #       -H "Content-Type:application/json" \
      #       -d \
      #       '{"key": "${{ secrets.MAIL_TOKEN }}","subject":"Frontend Build","content":"frontend deployed","to": "wangyu@wycode.cn"}' \
      #       'https://wycode.cn/api/v1/email'
      # - name: Notify Google
      #   run: curl -m 10 http://www.google.com/webmasters/sitemaps/ping?sitemap=https://wycode.cn/sitemap.xml