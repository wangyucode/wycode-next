name: Deploy with Crane

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.1.0
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "package-lock.json"

      - name: install
        run: npm ci

      - name: build
        run: npm run build

      - name: export
        run: npm run export

      - name: Tar files in out directory
        run: tar -czvf wycode.tar.gz -C out/ .

      - name: Extract version from package.json
        id: extract_version
        run: |
          version=$(jq -r '.version' package.json)
          echo "Version: $version"
          echo "::set-output name=version::$version"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.extract_version.outputs.version }}
          release_name: Release v${{ steps.extract_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./wycode.tar.gz
          asset_name: wycode.tar.gz
          asset_content_type: application/gzip

      - name: Call Crane to Deploy
        run: |
          curl -H "X-Api-Key: ${{secrets.CRANE_API_KEY}}" "https://wycode.cn/crane/deploy?url=https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}/releases/download/v${{ steps.extract_version.outputs.version }}/wycode.tar.gz"

      - name: Deploy to Github pages
        uses: crazy-max/ghaction-github-pages@v2.1.3
        with:
          repo: wangyucode/wangyucode.github.io
          target_branch: master
          build_dir: out
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_PUSH_TOKEN }}

      - name: Send posts to algolia
        run: npm run algolia ${{ secrets.ALGOLIA_KEY }}

      - name: Send Email
        run: |
          curl -m 10 -i -X POST \
            -H "Content-Type:application/json" \
            -d \
            '{"key": "${{ secrets.MAIL_TOKEN }}","subject":"Frontend Build","content":"frontend deployed","to": "wangyu@wycode.cn"}' \
            'https://wycode.cn/api/v1/email'
